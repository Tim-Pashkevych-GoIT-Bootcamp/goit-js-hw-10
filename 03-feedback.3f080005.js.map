{"mappings":"YAAA,ICUyBA,EDwBzBC,EAlC4B,CAC1BC,IAAA,SAAIC,EAAKC,GACP,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACnCC,GACFG,aAAaC,QAAQN,EAAKE,E,CAE5B,MAAOK,GACPC,QAAQC,IACN,mBAA0BC,OAAPV,EAAI,KAASU,OAANT,EAAM,6BAChCM,E,GAINI,IAAA,SAAIX,GACF,IACE,IAAME,EAAkBG,aAAaO,QAAQZ,GAC7C,OAA2B,OAApBE,OAA2BW,EAAYV,KAAKW,MAAMZ,E,CACzD,MAAOK,GACPC,QAAQC,IACN,uBAA2BC,OAAJV,EAAI,+BAC3BO,E,GAINQ,OAAA,SAAOf,GACL,IACEK,aAAaW,WAAWhB,E,CACxB,MAAOO,GACPC,QAAQC,IAAI,qBAAyBC,OAAJV,EAAI,+BAA8BO,E,IC3BnEU,EAAcC,SAASC,cAAc,kBACrCC,EAAatB,EAAoBa,IAAI,wBAOlBd,EAQRuB,IAPMvB,EAAcwB,QACjCJ,EAAYK,SAASD,MAAMpB,MAAQJ,EAAcwB,OAE/CxB,GAAiBA,EAAc0B,UACjCN,EAAYK,SAASC,QAAQtB,MAAQJ,EAAc0B,SAmBvDN,EAAYO,iBAAiB,SATb,SAAAC,GACd,IAAMJ,EAAQI,EAAMC,cAAcJ,SAASD,MAAMpB,MAC3CsB,EAAUE,EAAMC,cAAcJ,SAASC,QAAQtB,MAErDH,EAAoBC,IAAI,sBAAuB,CAC7CsB,QACAE,W,IAwBJN,EAAYO,iBAAiB,UAdZ,SAAAC,GACfA,EAAME,iBAENF,EAAMC,cAAcE,QAGpB,IAAMC,EAAa/B,EAAoBa,IAAI,uBACvCkB,IAEFrB,QAAQC,IAAIoB,GAEZ/B,EAAoBiB,OAAO,uB","sources":["src/js/storage.js","src/js/03-feedback.js"],"sourcesContent":["const localStorageManager = {\n  set(key, value) {\n    try {\n      const serializedValue = JSON.stringify(value);\n      if (serializedValue) {\n        localStorage.setItem(key, serializedValue);\n      }\n    } catch (error) {\n      console.log(\n        `Could not save '${key}:${value}' to Local Sorage. Error:`,\n        error\n      );\n    }\n  },\n  get(key) {\n    try {\n      const serializedValue = localStorage.getItem(key);\n      return serializedValue === null ? undefined : JSON.parse(serializedValue);\n    } catch (error) {\n      console.log(\n        `Could not retrieve '${key}' from Local Sorage. Error:`,\n        error\n      );\n    }\n  },\n  remove(key) {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log(`Could not remove '${key}' from Local Sorage. Error:`, error);\n    }\n  },\n};\n\nexport default localStorageManager;\n","import localStorageManager from './storage.js';\n\nconst formElement = document.querySelector('.feedback-form');\nconst storedData = localStorageManager.get('feedback-form-state');\n\n/**\n  |============================\n  | Set default values\n  |============================\n*/\nconst setDefaultValues = defaultValues => {\n  if (defaultValues && defaultValues.email) {\n    formElement.elements.email.value = defaultValues.email;\n  }\n  if (defaultValues && defaultValues.message) {\n    formElement.elements.message.value = defaultValues.message;\n  }\n};\nsetDefaultValues(storedData);\n\n/**\n  |============================\n  | Add OnInput Event Listeners\n  |============================\n*/\nconst onInput = event => {\n  const email = event.currentTarget.elements.email.value;\n  const message = event.currentTarget.elements.message.value;\n\n  localStorageManager.set('feedback-form-state', {\n    email,\n    message,\n  });\n};\nformElement.addEventListener('input', onInput);\n\n/**\n  |============================\n  | Add OnSubmit Event Listeners\n  |============================\n*/\nconst onSubmit = event => {\n  event.preventDefault();\n  // Cleanup form elements\n  event.currentTarget.reset();\n\n  // Check the Local Storage\n  const storedData = localStorageManager.get('feedback-form-state');\n  if (storedData) {\n    // Output Local Storage data\n    console.log(storedData);\n    // Cleanup Local Storage\n    localStorageManager.remove('feedback-form-state');\n  }\n};\nformElement.addEventListener('submit', onSubmit);\n"],"names":["defaultValues","$e40a24b7fc93604f$export$2e2bcd8739ae039","set","key","value","serializedValue","JSON","stringify","localStorage","setItem","error","console","log","concat","get","getItem","undefined","parse","remove","removeItem","$b00c40859be242c5$var$formElement","document","querySelector","$b00c40859be242c5$var$storedData","email","elements","message","addEventListener","event","currentTarget","preventDefault","reset","storedData1"],"version":3,"file":"03-feedback.3f080005.js.map"}