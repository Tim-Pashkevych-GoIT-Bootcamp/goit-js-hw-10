{"mappings":"IAkCAA,EAlC4B,CAC1BC,IAAIC,EAAKC,GACP,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACnCC,GACFG,aAAaC,QAAQN,EAAKE,E,CAE5B,MAAOK,GACPC,QAAQC,IACN,mBAAmBT,KAAOC,6BAC1BM,E,GAING,IAAIV,GACF,IACE,MAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQC,IACN,uBAAuBT,+BACvBO,E,GAINO,OAAOd,GACL,IACEK,aAAaU,WAAWf,E,CACxB,MAAOO,GACPC,QAAQC,IAAI,qBAAqBT,+BAAkCO,E,IC3BzE,MAAMS,EAAcC,SAASC,cAAc,kBACrCC,EAAarB,EAAoBY,IAAI,uBAOlB,IAAAU,KAQRD,IAPMC,EAAcC,QACjCL,EAAYM,SAASD,MAAMpB,MAAQmB,EAAcC,OAE/CD,GAAiBA,EAAcG,UACjCP,EAAYM,SAASC,QAAQtB,MAAQmB,EAAcG,SAmBvDP,EAAYQ,iBAAiB,SATbC,IACd,MAAMJ,EAAQI,EAAMC,cAAcJ,SAASD,MAAMpB,MAC3CsB,EAAUE,EAAMC,cAAcJ,SAASC,QAAQtB,MAErDH,EAAoBC,IAAI,sBAAuB,C,MAC7CsB,E,QACAE,GACA,IAuBJP,EAAYQ,iBAAiB,UAdZC,IACfA,EAAME,iBAENF,EAAMC,cAAcE,QAGpB,MAAMC,EAAa/B,EAAoBY,IAAI,uBACvCmB,IAEFrB,QAAQC,IAAIoB,GAEZ/B,EAAoBgB,OAAO,uB","sources":["src/js/storage.js","src/js/03-feedback.js"],"sourcesContent":["const localStorageManager = {\n  set(key, value) {\n    try {\n      const serializedValue = JSON.stringify(value);\n      if (serializedValue) {\n        localStorage.setItem(key, serializedValue);\n      }\n    } catch (error) {\n      console.log(\n        `Could not save '${key}:${value}' to Local Sorage. Error:`,\n        error\n      );\n    }\n  },\n  get(key) {\n    try {\n      const serializedValue = localStorage.getItem(key);\n      return serializedValue === null ? undefined : JSON.parse(serializedValue);\n    } catch (error) {\n      console.log(\n        `Could not retrieve '${key}' from Local Sorage. Error:`,\n        error\n      );\n    }\n  },\n  remove(key) {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log(`Could not remove '${key}' from Local Sorage. Error:`, error);\n    }\n  },\n};\n\nexport default localStorageManager;\n","import localStorageManager from './storage.js';\n\nconst formElement = document.querySelector('.feedback-form');\nconst storedData = localStorageManager.get('feedback-form-state');\n\n/**\n  |============================\n  | Set default values\n  |============================\n*/\nconst setDefaultValues = defaultValues => {\n  if (defaultValues && defaultValues.email) {\n    formElement.elements.email.value = defaultValues.email;\n  }\n  if (defaultValues && defaultValues.message) {\n    formElement.elements.message.value = defaultValues.message;\n  }\n};\nsetDefaultValues(storedData);\n\n/**\n  |============================\n  | Add OnInput Event Listeners\n  |============================\n*/\nconst onInput = event => {\n  const email = event.currentTarget.elements.email.value;\n  const message = event.currentTarget.elements.message.value;\n\n  localStorageManager.set('feedback-form-state', {\n    email,\n    message,\n  });\n};\nformElement.addEventListener('input', onInput);\n\n/**\n  |============================\n  | Add OnSubmit Event Listeners\n  |============================\n*/\nconst onSubmit = event => {\n  event.preventDefault();\n  // Cleanup form elements\n  event.currentTarget.reset();\n\n  // Check the Local Storage\n  const storedData = localStorageManager.get('feedback-form-state');\n  if (storedData) {\n    // Output Local Storage data\n    console.log(storedData);\n    // Cleanup Local Storage\n    localStorageManager.remove('feedback-form-state');\n  }\n};\nformElement.addEventListener('submit', onSubmit);\n"],"names":["$3fff5e8daf4b13a6$export$2e2bcd8739ae039","set","key","value","serializedValue","JSON","stringify","localStorage","setItem","error","console","log","get","getItem","undefined","parse","remove","removeItem","$945622fd0f572e60$var$formElement","document","querySelector","$945622fd0f572e60$var$storedData","defaultValues","email","elements","message","addEventListener","event","currentTarget","preventDefault","reset","storedData1"],"version":3,"file":"03-feedback.9d9a9c89.js.map"}